[project]
name = "solutionist"
version = "0.1.0"
description = "A modern, collaborative, developer-focused solution-sharing platform"
authors = [
    { name = "Solutionist Team" }
]
readme = "README.md"
requires-python = "^3.9"
dependencies = [
    "django (<5.0)",
    "django-bootstrap5 (>=25.2,<26.0)",
    "pillow (>=10.0.0)",
    "markdown (>=3.5.2)",
    "bleach (>=6.1.0)",
    "django-taggit (>=5.0.0)",
    "django-crispy-forms (>=2.1)",
    "crispy-bootstrap5 (>=2023.10)",
    "whitenoise (>=6.6.0)",
    "psycopg2-binary (>=2.9.9)",
    "gunicorn (>=21.2.0)",
    "python-dotenv (>=1.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
pytest = "^8.4.1"
pre-commit = "^4.2.0"
pytest-django = "^4.11.1"
pytest-cov = "^6.2.1"
coverage = "^7.5.0"
factory-boy = "^3.3.0"
faker = "^25.1.0"
django-debug-toolbar = "^4.3.0"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/settings/*"]

[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true
implicit_reexport = true
